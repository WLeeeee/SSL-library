!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCEPT_LIMIT	ssl/SSLSvr.h	4;"	d
ASN1BitString	crypto/ASN1Def.h	14;"	d
ASN1BmpString	crypto/ASN1Def.h	24;"	d
ASN1Boolean	crypto/ASN1Def.h	28;"	d
ASN1Enumreated	crypto/ASN1Def.h	13;"	d
ASN1GeneralSting	crypto/ASN1Def.h	22;"	d
ASN1GeneralizedTime	crypto/ASN1Def.h	20;"	d
ASN1IA5String	crypto/ASN1Def.h	18;"	d
ASN1Integer	crypto/ASN1Def.h	12;"	d
ASN1NULL	crypto/ASN1Def.h	29;"	d
ASN1ObjectID	crypto/ASN1Def.h	27;"	d
ASN1OctetString	crypto/ASN1Def.h	15;"	d
ASN1PrintableString	crypto/ASN1Def.h	16;"	d
ASN1String	crypto/ASN1Def.h	/^typedef struct ASN1String {$/;"	s
ASN1String	crypto/ASN1Def.h	/^} ASN1String;$/;"	t	typeref:struct:ASN1String
ASN1StringTable	crypto/ASN1Def.h	/^typedef struct ASN1StringTable {$/;"	s
ASN1StringTable	crypto/ASN1Def.h	/^} ASN1StringTable;$/;"	t	typeref:struct:ASN1StringTable
ASN1T61String	crypto/ASN1Def.h	17;"	d
ASN1Time	crypto/ASN1Def.h	21;"	d
ASN1UTCTime	crypto/ASN1Def.h	19;"	d
ASN1UTF8String	crypto/ASN1Def.h	26;"	d
ASN1UniversalString	crypto/ASN1Def.h	23;"	d
ASN1VisibleString	crypto/ASN1Def.h	25;"	d
AUX_F	crypto/md5/MD5.c	44;"	d	file:
AUX_G	crypto/md5/MD5.c	47;"	d	file:
AUX_H	crypto/md5/MD5.c	50;"	d	file:
AUX_I	crypto/md5/MD5.c	53;"	d	file:
AlgorithmID	crypto/X509.h	/^typedef struct AlgorithmID {$/;"	s
AlgorithmID	crypto/X509.h	/^} AlgorithmID;$/;"	t	typeref:struct:AlgorithmID
BILLION	http/http.h	28;"	d
BNUM_HEX_DIGITS_PER_POS	utils/BigNum.h	10;"	d
BNUM_HEX_MAX_DIGITS	utils/BigNum.h	7;"	d
BNum	utils/BigNum.h	/^typedef struct BNum {$/;"	s
BNum	utils/BigNum.h	/^} BNum;$/;"	t	typeref:struct:BNum
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -Wno-format$/;"	m
CHAR2HEX	utils/StrLib.h	4;"	d
CHECK_BLANK	http/myhttpd.c	3;"	d	file:
CHECK_HDR	ssl/SSLLib.h	8;"	d
CHECK_READ	ssl/SSLLib.h	28;"	d
CHECK_VER	ssl/SSLLib.h	18;"	d
CLIENT_RANDOM_SIZE	ssl/SSLLib.h	120;"	d
CertX509	crypto/X509.h	/^typedef struct CertX509 {$/;"	s
CertX509	crypto/X509.h	/^} CertX509;$/;"	t	typeref:struct:CertX509
CipherSuite	ssl/SSLLib.h	/^typedef struct CipherSuite {$/;"	s
CipherSuite	ssl/SSLLib.h	/^} CipherSuite;$/;"	t	typeref:struct:CipherSuite
CmdTable	Common.h	/^typedef struct CmdTable {$/;"	s
CmdTable	Common.h	/^} CmdTable;$/;"	t	typeref:struct:CmdTable
DEBUGFLAGS	Makefile	/^DEBUGFLAGS = -DDEBUG -DCLNLOGDIR='"..\/..\/clnLog\/"' -DSVRLOGDIR='"..\/..\/svrLog\/"'$/;"	m
DERCstr	crypto/X509.c	/^typedef struct DERCstr {$/;"	s	file:
DERCstr	crypto/X509.c	/^} DERCstr;$/;"	t	typeref:struct:DERCstr	file:
DERPri	crypto/X509.c	/^typedef struct DERPri {$/;"	s	file:
DERPri	crypto/X509.c	/^} DERPri;$/;"	t	typeref:struct:DERPri	file:
ExecEntry	Common.h	/^typedef void (*ExecEntry)(void *);$/;"	t
FILE_COUNTER	http/clg.c	3;"	d	file:
FIN_DIGEST_UPDATE	ssl/SSLLib.h	38;"	d
ID	ssl/SSLLib.h	/^	int ID;$/;"	m	struct:CipherSuite
INCLUDE	Makefile	/^INCLUDE = -I.\/ -I..\/$/;"	m
INPUT_LIMIT	ssl/SSLSvr.c	102;"	d	file:
IssuerInfo	crypto/X509.h	/^typedef struct IssuerInfo {$/;"	s
IssuerInfo	crypto/X509.h	/^} IssuerInfo;$/;"	t	typeref:struct:IssuerInfo
KeyPairs	ssl/SSLLib.h	/^typedef	struct KeyPairs {$/;"	s
KeyPairs	ssl/SSLLib.h	/^} KeyPairs;$/;"	t	typeref:struct:KeyPairs
LDFLAGS	Makefile	/^LDFLAGS = -lm -lgmp -lcrypto -lssl -ldl -lpthread -lrt$/;"	m
LEFT_ROTATE	utils/BitOp.h	6;"	d
LINE_MAX_DIGITS	crypto/Base64.c	5;"	d	file:
MASTER_SECRET_SIZE	ssl/SSLLib.h	116;"	d
MAX_ELEMENT_NUM	crypto/X509.h	7;"	d
MAX_LENGTH_OCTETS	crypto/X509.h	6;"	d
MD5Ctx	crypto/md5/MD5.h	/^typedef struct MD5Ctx {$/;"	s
MD5Ctx	crypto/md5/MD5.h	/^} MD5Ctx;$/;"	t	typeref:struct:MD5Ctx
MD5LookupTab	crypto/md5/MD5.c	/^u4 MD5LookupTab[64] = {$/;"	v
MD5ShiftTab	crypto/md5/MD5.c	/^u4 MD5ShiftTab[64] = {$/;"	v
MD5_CHUNK_COUNT	crypto/md5/MD5.h	5;"	d
MD5_CHUNK_SIZE	crypto/md5/MD5.h	4;"	d
MD5_HASH_SIZE	crypto/md5/MD5.h	3;"	d
MSG_LIMIT	Common.h	4;"	d
PRE_MASTER_SECRET_SIZE	ssl/SSLLib.h	117;"	d
RSAFiles	crypto/RSA.h	/^typedef struct RSAFiles {$/;"	s
RSAFiles	crypto/RSA.h	/^} RSAFiles;$/;"	t	typeref:struct:RSAFiles
RSAParameters	crypto/RSA.h	/^typedef struct RSAParameters {$/;"	s
RSAParameters	crypto/RSA.h	/^} RSAParameters;$/;"	t	typeref:struct:RSAParameters
SERVER_MAX_LISTEN	http/http.h	25;"	d
SERVER_RANDOM_SIZE	ssl/SSLLib.h	119;"	d
SOURCE	Makefile	/^SOURCE :=			\\$/;"	m
SSL30_VERSION	ssl/SSLLib.h	56;"	d
SSL31_DH_DSS_DES_192_CBC3_SHA	ssl/S31Cln.h	21;"	d
SSL31_DH_DSS_DES_192_CBC3_SHA	ssl/S31Svr.h	22;"	d
SSL31_DH_DSS_DES_40_CBC_SHA	ssl/S31Cln.h	19;"	d
SSL31_DH_DSS_DES_40_CBC_SHA	ssl/S31Svr.h	20;"	d
SSL31_DH_DSS_DES_64_CBC_SHA	ssl/S31Cln.h	20;"	d
SSL31_DH_DSS_DES_64_CBC_SHA	ssl/S31Svr.h	21;"	d
SSL31_DH_RSA_DES_192_CBC3_SHA	ssl/S31Cln.h	24;"	d
SSL31_DH_RSA_DES_192_CBC3_SHA	ssl/S31Svr.h	25;"	d
SSL31_DH_RSA_DES_40_CBC_SHA	ssl/S31Cln.h	22;"	d
SSL31_DH_RSA_DES_40_CBC_SHA	ssl/S31Svr.h	23;"	d
SSL31_DH_RSA_DES_64_CBC_SHA	ssl/S31Cln.h	23;"	d
SSL31_DH_RSA_DES_64_CBC_SHA	ssl/S31Svr.h	24;"	d
SSL31_RSA_DES_192_CBC3_SHA	ssl/S31Cln.h	17;"	d
SSL31_RSA_DES_192_CBC3_SHA	ssl/S31Svr.h	18;"	d
SSL31_RSA_DES_40_CBC_SHA	ssl/S31Cln.h	15;"	d
SSL31_RSA_DES_40_CBC_SHA	ssl/S31Svr.h	16;"	d
SSL31_RSA_DES_64_CBC_SHA	ssl/S31Cln.h	16;"	d
SSL31_RSA_DES_64_CBC_SHA	ssl/S31Svr.h	17;"	d
SSL31_RSA_IDEA_128_SHA	ssl/S31Cln.h	14;"	d
SSL31_RSA_IDEA_128_SHA	ssl/S31Svr.h	15;"	d
SSL31_RSA_NULL_MD5	ssl/S31Cln.h	8;"	d
SSL31_RSA_NULL_MD5	ssl/S31Svr.h	9;"	d
SSL31_RSA_NULL_SHA	ssl/S31Cln.h	9;"	d
SSL31_RSA_NULL_SHA	ssl/S31Svr.h	10;"	d
SSL31_RSA_RC2_40_MD5	ssl/S31Cln.h	13;"	d
SSL31_RSA_RC2_40_MD5	ssl/S31Svr.h	14;"	d
SSL31_RSA_RC4_128_MD5	ssl/S31Cln.h	11;"	d
SSL31_RSA_RC4_128_MD5	ssl/S31Svr.h	12;"	d
SSL31_RSA_RC4_128_SHA	ssl/S31Cln.h	12;"	d
SSL31_RSA_RC4_128_SHA	ssl/S31Svr.h	13;"	d
SSL31_RSA_RC4_40_MD5	ssl/S31Cln.h	10;"	d
SSL31_RSA_RC4_40_MD5	ssl/S31Svr.h	11;"	d
SSL31_VERSION	ssl/SSLLib.h	57;"	d
SSL32_VERSION	ssl/SSLLib.h	58;"	d
SSL33_VERSION	ssl/SSLLib.h	59;"	d
SSLMTHdr	ssl/SSLLib.h	68;"	d
SSLMTHdrLen	ssl/SSLLib.h	76;"	d
SSLMTLen	ssl/SSLLib.h	69;"	d
SSLMsgBody	ssl/SSLLib.h	72;"	d
SSLRTHdr	ssl/SSLLib.h	63;"	d
SSLRTHdrLen	ssl/SSLLib.h	75;"	d
SSLRTLen	ssl/SSLLib.h	65;"	d
SSLRTVer	ssl/SSLLib.h	64;"	d
SSLSession	ssl/SSLLib.h	/^typedef struct SSLSession {$/;"	s
SSLSession	ssl/SSLLib.h	/^} SSLSession;$/;"	t	typeref:struct:SSLSession
SSL_CLIENT	Common.h	8;"	d
SSL_METH	ssl/SSLLib.h	/^typedef struct SSL_METH {$/;"	s
SSL_METH	ssl/SSLLib.h	/^} SSL_METH;$/;"	t	typeref:struct:SSL_METH
SSL_MT_ALT_BAD_CERTIFICATE	ssl/SSLLib.h	109;"	d
SSL_MT_ALT_BAD_RECORD_MAC	ssl/SSLLib.h	105;"	d
SSL_MT_ALT_CERTIFICATE_EXPIRED	ssl/SSLLib.h	112;"	d
SSL_MT_ALT_CERTIFICATE_REVOKED	ssl/SSLLib.h	111;"	d
SSL_MT_ALT_CERTIFICATE_UNKNOWN	ssl/SSLLib.h	113;"	d
SSL_MT_ALT_CLOSE_NOTIFY	ssl/SSLLib.h	103;"	d
SSL_MT_ALT_DECOMPRESSION_FAILURE	ssl/SSLLib.h	106;"	d
SSL_MT_ALT_HANDSHAKE_FAILURE	ssl/SSLLib.h	107;"	d
SSL_MT_ALT_ILLEGAL_PARAMETER	ssl/SSLLib.h	114;"	d
SSL_MT_ALT_NO_CERTIFICATE	ssl/SSLLib.h	108;"	d
SSL_MT_ALT_UNEXPECTED_MESSAGE	ssl/SSLLib.h	104;"	d
SSL_MT_ALT_UNSUPPORTED_CERTIFICATE	ssl/SSLLib.h	110;"	d
SSL_MT_CCS	ssl/SSLLib.h	100;"	d
SSL_MT_HSK_CERTIFICATE	ssl/SSLLib.h	90;"	d
SSL_MT_HSK_CERTIFICATE_REQUEST	ssl/SSLLib.h	92;"	d
SSL_MT_HSK_CERTIFICATE_VERIFY	ssl/SSLLib.h	94;"	d
SSL_MT_HSK_CLIENT_HELLO	ssl/SSLLib.h	88;"	d
SSL_MT_HSK_CLIENT_KEY_EXCHANGE	ssl/SSLLib.h	95;"	d
SSL_MT_HSK_FINISHED	ssl/SSLLib.h	96;"	d
SSL_MT_HSK_HELLO_REQUEST	ssl/SSLLib.h	87;"	d
SSL_MT_HSK_SERVER_DONE	ssl/SSLLib.h	93;"	d
SSL_MT_HSK_SERVER_HELLO	ssl/SSLLib.h	89;"	d
SSL_MT_HSK_SERVER_KEY_EXCHANGE	ssl/SSLLib.h	91;"	d
SSL_MT_HSK_SUCCESS	ssl/SSLLib.h	97;"	d
SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS	ssl/SSLLib.h	53;"	d
SSL_RT_ALERT	ssl/SSLLib.h	80;"	d
SSL_RT_APPLICATION_DATA	ssl/SSLLib.h	82;"	d
SSL_RT_CHANGE_CIPHER_SPEC	ssl/SSLLib.h	79;"	d
SSL_RT_HANDSHAKE	ssl/SSLLib.h	81;"	d
SSL_SERVER	Common.h	7;"	d
SSL_VERSION	ssl/S31Cln.h	5;"	d
SSL_VERSION	ssl/S31Svr.h	6;"	d
STDIN_LIMIT	ssl/SSLSvr.c	20;"	d	file:
SubjectPubKeyInfo	crypto/X509.h	/^typedef struct SubjectPubKeyInfo {$/;"	s
SubjectPubKeyInfo	crypto/X509.h	/^} SubjectPubKeyInfo;$/;"	t	typeref:struct:SubjectPubKeyInfo
SymCipher	ssl/SSLLib.h	/^typedef struct SymCipher {$/;"	s
SymCipher	ssl/SSLLib.h	/^} SymCipher;$/;"	t	typeref:struct:SymCipher
TBSCert	crypto/X509.h	/^typedef struct TBSCert {$/;"	s
TBSCert	crypto/X509.h	/^} TBSCert;$/;"	t	typeref:struct:TBSCert
TLS_CLIENT_FINISH_CONST	ssl/SSLLib.h	124;"	d
TLS_CLIENT_FINISH_CONST_SIZE	ssl/SSLLib.h	125;"	d
TLS_CLIENT_WRITE_KEY_CONST	ssl/SSLLib.h	132;"	d
TLS_CLIENT_WRITE_KEY_CONST_SIZE	ssl/SSLLib.h	133;"	d
TLS_IV_BLOCK_CONST	ssl/SSLLib.h	136;"	d
TLS_IV_BLOCK_CONST_SIZE	ssl/SSLLib.h	137;"	d
TLS_KEY_EXPANSION_CONST	ssl/SSLLib.h	130;"	d
TLS_KEY_EXPANSION_CONST_SIZE	ssl/SSLLib.h	131;"	d
TLS_MASTER_SECRET_CONST	ssl/SSLLib.h	138;"	d
TLS_MASTER_SECRET_CONST_SIZE	ssl/SSLLib.h	139;"	d
TLS_MAX_CONST_SIZE	ssl/SSLLib.h	123;"	d
TLS_SERVER_FINISH_CONST	ssl/SSLLib.h	126;"	d
TLS_SERVER_FINISH_CONST_SIZE	ssl/SSLLib.h	127;"	d
TLS_SERVER_WRITE_KEY_CONST	ssl/SSLLib.h	128;"	d
TLS_SERVER_WRITE_KEY_CONST	ssl/SSLLib.h	134;"	d
TLS_SERVER_WRITE_KEY_CONST_SIZE	ssl/SSLLib.h	129;"	d
TLS_SERVER_WRITE_KEY_CONST_SIZE	ssl/SSLLib.h	135;"	d
TLS_VERIFY_DATA_SIZE	ssl/SSLLib.h	122;"	d
TagClass_Application	crypto/ASN1Def.h	32;"	d
TagClass_CtxSpecific	crypto/ASN1Def.h	33;"	d
TagClass_Private	crypto/ASN1Def.h	34;"	d
TagClass_Universal	crypto/ASN1Def.h	31;"	d
Tag_ASN1BitString	crypto/ASN1Def.h	40;"	d
Tag_ASN1BmpString	crypto/ASN1Def.h	55;"	d
Tag_ASN1Boolean	crypto/ASN1Def.h	38;"	d
Tag_ASN1EOC	crypto/ASN1Def.h	37;"	d
Tag_ASN1Enumerated	crypto/ASN1Def.h	44;"	d
Tag_ASN1GeneralString	crypto/ASN1Def.h	53;"	d
Tag_ASN1GeneralizedTime	crypto/ASN1Def.h	52;"	d
Tag_ASN1IA5String	crypto/ASN1Def.h	50;"	d
Tag_ASN1Integer	crypto/ASN1Def.h	39;"	d
Tag_ASN1NULL	crypto/ASN1Def.h	42;"	d
Tag_ASN1ObjectID	crypto/ASN1Def.h	43;"	d
Tag_ASN1OctetString	crypto/ASN1Def.h	41;"	d
Tag_ASN1PrintableString	crypto/ASN1Def.h	48;"	d
Tag_ASN1Sequence	crypto/ASN1Def.h	46;"	d
Tag_ASN1Set	crypto/ASN1Def.h	47;"	d
Tag_ASN1T61String	crypto/ASN1Def.h	49;"	d
Tag_ASN1UTCTime	crypto/ASN1Def.h	51;"	d
Tag_ASN1UTF8String	crypto/ASN1Def.h	45;"	d
Tag_ASN1UniversalString	crypto/ASN1Def.h	54;"	d
USE_EPH_KEY	ssl/S31Cln.c	281;"	d	file:
USE_EPH_KEY	ssl/S31Cln.c	382;"	d	file:
_ASN1_DEF_H	crypto/ASN1Def.h	2;"	d
_BASE_64_H	crypto/Base64.h	2;"	d
_BIG_NUM_H_	utils/BigNum.h	2;"	d
_BIT_OP_H_	utils/BitOp.h	2;"	d
_COMMON_H_	Common.h	2;"	d
_DER_LIB_H_	crypto/DERLib.h	2;"	d
_HTTP_H_	http/http.h	2;"	d
_RSA_H	crypto/RSA.h	2;"	d
_SSL31_CLIENT_H_	ssl/S31Cln.h	2;"	d
_SSL31_SERVER_H_	ssl/S31Svr.h	2;"	d
_SSL_LIB_H_	ssl/SSLLib.h	2;"	d
_SSL_SVR_H_	ssl/SSLSvr.h	2;"	d
_STR_LIB_H_	utils/StrLib.h	2;"	d
_UTILITY_H	utils/FileIO.h	2;"	d
_X509_H_	crypto/X509.h	2;"	d
addBNum	utils/BigNum.c	/^BNum *addBNum(BNum *pDst, BNum *pSrc1, BNum *pSrc2)$/;"	f
algorithm	crypto/X509.h	/^	ASN1ObjectID *algorithm;$/;"	m	struct:AlgorithmID
algorithm	crypto/X509.h	/^	AlgorithmID *algorithm;$/;"	m	struct:SubjectPubKeyInfo
base	utils/BigNum.h	/^	int base;$/;"	m	struct:BNum
base64Decode	crypto/Base64.c	/^u1* base64Decode(u1 *in)$/;"	f
base64DecodeTable	crypto/Base64.c	/^const int base64DecodeTable[123] = {$/;"	v
base64Encode	crypto/Base64.c	/^u1* base64Encode(u1 *in)$/;"	f
base64EncodeTable	crypto/Base64.c	/^char *base64EncodeTable = $/;"	v
blockSize	ssl/SSLLib.h	/^	int blockSize;$/;"	m	struct:SymCipher
bool	Common.h	/^} bool;$/;"	t	typeref:enum:__anon1
buf	http/pics/test.c	/^char buf[8192];$/;"	v
certPath	Common.h	/^	char *certPath;$/;"	m	struct:CmdTable
certX509	ssl/SSLLib.h	/^	X509 *certX509;$/;"	m	struct:SSLSession
chooseCipherSuite	ssl/S31Svr.c	/^static CipherSuite *chooseCipherSuite(int candidates, u1 *ptr)$/;"	f	file:
cipher	ssl/SSLLib.h	/^	EVP_CIPHER *cipher;$/;"	m	struct:CipherSuite
cipherCB	ssl/SSLLib.h	/^	const EVP_CIPHER *(*cipherCB)(void);$/;"	m	struct:CipherSuite
cipherRCtx	ssl/SSLLib.h	/^	EVP_CIPHER_CTX *cipherRCtx;$/;"	m	struct:SSLSession
cipherTable	ssl/SSLLib.c	/^CipherSuite cipherTable[] = {$/;"	v
cipherWCtx	ssl/SSLLib.h	/^	EVP_CIPHER_CTX *cipherWCtx;$/;"	m	struct:SSLSession
cipher_f	crypto/RSA.h	/^	FILE *cipher_f;$/;"	m	struct:RSAFiles
class	crypto/X509.c	/^	int class;$/;"	m	struct:DERCstr	file:
clientIV	ssl/SSLLib.h	/^	u1 *clientIV;$/;"	m	struct:KeyPairs
clientMAC	ssl/SSLLib.h	/^	u1 *clientMAC;$/;"	m	struct:KeyPairs
clientW	ssl/SSLLib.h	/^	u1 *clientW;$/;"	m	struct:KeyPairs
clnMeth	ssl/S31Cln.c	/^SSL_METH clnMeth = {$/;"	v
clnProcNum	Common.h	/^	int clnProcNum;$/;"	m	struct:CmdTable
clnRandom	ssl/SSLLib.h	/^	u1 *clnRandom;$/;"	m	struct:SSLSession
clnSeq	ssl/SSLLib.h	/^	u8 clnSeq;$/;"	m	struct:SSLSession
cmpBNum	utils/BigNum.c	/^static int cmpBNum(BNum *src1, BNum *src2)$/;"	f	file:
commonName	crypto/X509.h	/^	char *commonName;$/;"	m	struct:IssuerInfo
compression	ssl/SSLLib.h	/^	int compression;$/;"	m	struct:SSLSession
connect_server	http/clg.c	/^void connect_server(CmdTable *pCmdTable)$/;"	f
connection_counter	http/clg.c	/^unsigned long long connection_counter;$/;"	v
connection_time	http/clg.c	/^unsigned long long connection_time;$/;"	v
connfd	ssl/SSLLib.h	/^	int connfd;$/;"	m	struct:SSLSession
content_400	http/myhttpd.c	/^char content_400[] = $/;"	v
content_403	http/myhttpd.c	/^char content_403[] = $/;"	v
content_404	http/myhttpd.c	/^char content_404[] = $/;"	v
country	crypto/X509.h	/^	char *country;$/;"	m	struct:IssuerInfo
crypto	Common.h	/^	int crypto;$/;"	m	struct:CmdTable
cryptoFiles	Common.h	/^	void *cryptoFiles;$/;"	m	struct:CmdTable
cs	ssl/SSLLib.h	/^	CipherSuite *cs;	$/;"	m	struct:SSLSession
curLen	crypto/X509.c	/^	int curLen;$/;"	m	struct:DERCstr	file:
data	crypto/ASN1Def.h	/^	char *data;$/;"	m	struct:ASN1String
data	crypto/md5/MD5.h	/^	u4 data[MD5_CHUNK_COUNT];$/;"	m	struct:MD5Ctx
data	ssl/SSLLib.h	/^	u1 *data;$/;"	m	struct:KeyPairs
dataIdx	crypto/md5/MD5.h	/^	u4 dataIdx;$/;"	m	struct:MD5Ctx
dataLen	crypto/X509.c	/^	int dataLen;$/;"	m	struct:DERCstr	file:
dataLen	crypto/X509.c	/^	int dataLen;$/;"	m	struct:DERPri	file:
decOID	crypto/DERLib.c	/^void decOID(u1 *in, int iLen)$/;"	f
digest	ssl/SSLLib.h	/^	EVP_MD *digest;$/;"	m	struct:CipherSuite
digestCB	ssl/SSLLib.h	/^	const EVP_MD *(*digestCB)(void);$/;"	m	struct:CipherSuite
distNameQualifier	crypto/X509.h	/^	char *distNameQualifier;$/;"	m	struct:IssuerInfo
divBNum	utils/BigNum.c	/^BNum *divBNum(BNum *dst, BNum *src1, BNum *src2)$/;"	f
doMD5	crypto/md5/MD5.c	/^char* doMD5(char *dst, const char *src, int len)$/;"	f
dump_buf	http/clg.c	/^static void dump_buf(char *buf, int len)$/;"	f	file:
dump_buf	http/myhttpd.c	/^void dump_buf(char *buf, int len, int file_size)$/;"	f
error	http/clg.c	/^static void error(char *err_msg)$/;"	f	file:
error	http/myhttpd.c	/^void error(char *err_msg)$/;"	f
execCb	Common.h	/^	ExecEntry execCb;$/;"	m	struct:CmdTable
false	Common.h	/^	false = 0, true = !false$/;"	e	enum:__anon1
file_size	http/clg.c	/^int file_size;$/;"	v
finMD5	crypto/md5/MD5.c	/^int finMD5(char *dst, MD5Ctx *ctx)$/;"	f
fini	http/clg.c	/^void fini()$/;"	f
freeCmdTable	Main.c	/^static void freeCmdTable()$/;"	f	file:
freeTBSCert	crypto/X509.c	/^static void freeTBSCert(TBSCert *pTBSCert)$/;"	f	file:
gCmdTable	Main.c	/^CmdTable gCmdTable; $/;"	v
genExpFinKeys	ssl/SSLLib.c	/^static void genExpFinKeys(SSLSession *ssl, KeyPairs *pKeys, $/;"	f	file:
genFinMsg	ssl/SSLLib.c	/^void genFinMsg(SSLSession *ssl, u1 *label, int labelLen, $/;"	f
genHMAC	ssl/SSLLib.c	/^int genHMAC(EVP_MD *hash, u1 *macW, int macWLen, $/;"	f
genKeyPairs	ssl/SSLLib.c	/^KeyPairs *genKeyPairs(SSLSession *ssl, int version)$/;"	f
genMasterSecret	ssl/SSLLib.c	/^u1 *genMasterSecret(SSLSession *ssl, u1 *preMS, int version)$/;"	f
genQualifier	crypto/X509.h	/^	char *genQualifier;$/;"	m	struct:IssuerInfo
genRandom	ssl/SSLLib.c	/^u1 *genRandom(int byte)$/;"	f
getCipherByID	ssl/SSLLib.c	/^CipherSuite *getCipherByID(u4 cipherID)$/;"	f
get_200_ok	http/myhttpd.c	/^int get_200_ok(char *buf, char *file_ext, int file_len)$/;"	f
get_400_bad_request	http/myhttpd.c	/^int get_400_bad_request(char *buf)$/;"	f
get_403_forbidden	http/myhttpd.c	/^int get_403_forbidden(char *buf)$/;"	f
get_404_not_found	http/myhttpd.c	/^int get_404_not_found(char *buf)$/;"	f
get_file_ext	http/myhttpd.c	/^char *get_file_ext(char *filename) {$/;"	f
get_time	http/myhttpd.c	/^int get_time(char *buf)$/;"	f
givenName	crypto/X509.h	/^	char *givenName;$/;"	m	struct:IssuerInfo
handle_get	http/myhttpd.c	/^int handle_get(char *path, char *cli_ver, SSLSession *ssl)$/;"	f
handshake	ssl/SSLLib.h	/^	int (*handshake)(SSLSession*, bool);$/;"	m	struct:SSL_METH
hex2Dec	utils/BigNum.c	/^static char *hex2Dec(BNum *src, char *dst)$/;"	f	file:
httpVer	Common.h	/^	int httpVer;$/;"	m	struct:CmdTable
inEnc	ssl/SSLLib.h	/^	bool inEnc;$/;"	m	struct:SSLSession
index	utils/BigNum.h	/^	u4 index;$/;"	m	struct:BNum
init	http/clg.c	/^void init()$/;"	f
initBNum	utils/BigNum.c	/^int initBNum(BNum *src)$/;"	f
initMD5	crypto/md5/MD5.c	/^int initMD5(MD5Ctx *ctx)$/;"	f
ipAddr	Common.h	/^	char *ipAddr;$/;"	m	struct:CmdTable
isExport	ssl/SSLLib.h	/^	bool isExport;$/;"	m	struct:CipherSuite
isExportable	ssl/SSLLib.h	/^	bool isExportable;$/;"	m	struct:SymCipher
issuer	crypto/X509.h	/^	IssuerInfo *issuer;$/;"	m	struct:TBSCert
issuerUID	crypto/X509.h	/^	char *issuerUID;$/;"	m	struct:TBSCert
ivSize	ssl/SSLLib.h	/^	int ivSize;$/;"	m	struct:SymCipher
keyBitsEff	ssl/SSLLib.h	/^	int keyBitsEff;$/;"	m	struct:SymCipher
keyLen	crypto/RSA.h	/^	int keyLen;$/;"	m	struct:RSAParameters
keyLen	crypto/X509.h	/^	int keyLen;$/;"	m	struct:SubjectPubKeyInfo
keyMaterial	ssl/SSLLib.h	/^	int keyMaterial;$/;"	m	struct:CipherSuite
keyMaterial	ssl/SSLLib.h	/^	int keyMaterial;$/;"	m	struct:SymCipher
keyMaterialExp	ssl/SSLLib.h	/^	int keyMaterialExp;$/;"	m	struct:SymCipher
keys	ssl/SSLLib.h	/^	KeyPairs *keys;$/;"	m	struct:SSLSession
length	crypto/ASN1Def.h	/^	int length;$/;"	m	struct:ASN1String
length	crypto/md5/MD5.h	/^	u8 length;$/;"	m	struct:MD5Ctx
locality	crypto/X509.h	/^	char *locality;$/;"	m	struct:IssuerInfo
main	Main.c	/^int main(int argc, char *argv[])$/;"	f
main	crypto/md5/MD5Test.c	/^int main()$/;"	f
main	crypto/md5/test.c	/^int main()$/;"	f
main	http/pics/test.c	/^int main()$/;"	f
main	utils/test.c	/^int main()$/;"	f
masterSecret	ssl/SSLLib.h	/^	u1 *masterSecret;$/;"	m	struct:SSLSession
md5Fin	ssl/SSLLib.h	/^	EVP_MD_CTX *md5Fin;$/;"	m	struct:SSLSession
method	ssl/SSLLib.h	/^	struct SSL_METH *method;$/;"	m	struct:SSLSession	typeref:struct:SSLSession::SSL_METH
mod	crypto/RSA.h	/^	u1 *mod;$/;"	m	struct:RSAParameters
modBNum	utils/BigNum.c	/^BNum *modBNum(BNum *dst, BNum *src1, BNum *src2)$/;"	f
mod_f	crypto/RSA.h	/^	FILE *mod_f;$/;"	m	struct:RSAFiles
mod_z	crypto/RSA.h	/^	mpz_t mod_z;$/;"	m	struct:RSAParameters
mulBNum	utils/BigNum.c	/^BNum *mulBNum(BNum *dst, BNum *src1, BNum *src2)$/;"	f
name	ssl/SSLLib.h	/^	char *name;$/;"	m	struct:CipherSuite
name	ssl/SSLLib.h	/^	char *name;$/;"	m	struct:SymCipher
next	crypto/X509.c	/^	struct DERCstr *prev, *next;$/;"	m	struct:DERCstr	typeref:struct:DERCstr::	file:
notAfter	crypto/X509.h	/^	char *notAfter;$/;"	m	struct:TBSCert
notBefore	crypto/X509.h	/^	char *notBefore;$/;"	m	struct:TBSCert
num	utils/BigNum.h	/^	u4 num[BNUM_HEX_MAX_DIGITS\/BNUM_HEX_DIGITS_PER_POS];$/;"	m	struct:BNum
open_file_for_write	http/myhttpd.c	/^int open_file_for_write(char *filename, SSLSession *ssl)$/;"	f
options	ssl/SSLLib.h	/^	u8 options;$/;"	m	struct:SSLSession
org	crypto/X509.h	/^	char *org;$/;"	m	struct:IssuerInfo
orgUnit	crypto/X509.h	/^	char *orgUnit;$/;"	m	struct:IssuerInfo
pData	crypto/X509.c	/^	u1 *pData;$/;"	m	struct:DERCstr	file:
pData	crypto/X509.c	/^	u1 *pData;$/;"	m	struct:DERPri	file:
pUsage	Main.c	/^static void pUsage()$/;"	f	file:
parameters	crypto/X509.h	/^	void *parameters;$/;"	m	struct:AlgorithmID
parseCertX509	crypto/X509.c	/^CertX509 *parseCertX509(u1 *x509)$/;"	f
parseCmd	Main.c	/^static int parseCmd(int argc, char **argv)$/;"	f	file:
parseIDOct	crypto/X509.c	/^static int parseIDOct(u1 **ptr, DERCstr **cstr, DERPri *pri)$/;"	f	file:
parseLenOct	crypto/X509.c	/^static int parseLenOct(u1 **ptr)$/;"	f	file:
parseTBSCert	crypto/X509.c	/^static TBSCert *parseTBSCert(u1 **rawData)$/;"	f	file:
pbKey	crypto/RSA.h	/^	u1 *pbKey;$/;"	m	struct:RSAParameters
pbKey_f	crypto/RSA.h	/^	FILE *pbKey_f;$/;"	m	struct:RSAFiles
pbKey_z	crypto/RSA.h	/^	mpz_t pbKey_z; $/;"	m	struct:RSAParameters
pkeyInfo	crypto/X509.h	/^	SubjectPubKeyInfo *pkeyInfo;$/;"	m	struct:TBSCert
plain_f	crypto/RSA.h	/^	FILE *plain_f;$/;"	m	struct:RSAFiles
popCstr	crypto/X509.c	/^void popCstr(DERCstr **top)$/;"	f
port	Common.h	/^	int port;$/;"	m	struct:CmdTable
port_num	http/clg.c	/^int port_num;$/;"	v
port_num	http/myhttpd.c	/^unsigned port_num;$/;"	v
prev	crypto/X509.c	/^	struct DERCstr *prev, *next;$/;"	m	struct:DERCstr	typeref:struct:DERCstr::DERCstr	file:
priKey	ssl/SSLLib.h	/^	EVP_PKEY *priKey;$/;"	m	struct:SSLSession
printBNum2Str	utils/BigNum.c	/^char *printBNum2Str(BNum *src, char *dst, int base)$/;"	f
pseudonym	crypto/X509.h	/^	char *pseudonym;$/;"	m	struct:IssuerInfo
pubKey	ssl/SSLLib.h	/^	EVP_PKEY *pubKey;$/;"	m	struct:SSLSession
publicKey	crypto/X509.h	/^	char *publicKey;$/;"	m	struct:SubjectPubKeyInfo
pushCstr	crypto/X509.c	/^void pushCstr(DERCstr **top, DERCstr *new)$/;"	f
pvKey	crypto/RSA.h	/^	u1 *pvKey;$/;"	m	struct:RSAParameters
pvKey_f	crypto/RSA.h	/^	FILE *pvKey_f;$/;"	m	struct:RSAFiles
pvKey_z	crypto/RSA.h	/^	mpz_t pvKey_z;$/;"	m	struct:RSAParameters
raw2Str	utils/StrLib.c	/^u1 *raw2Str(u1 *rawIn, int length)$/;"	f
rawDataBuf	ssl/SSLLib.h	/^	u1 *rawDataBuf;$/;"	m	struct:SSLSession
rawDataLen	ssl/SSLLib.h	/^	int rawDataLen;$/;"	m	struct:SSLSession
rawDataRead	ssl/SSLLib.h	/^	int rawDataRead;$/;"	m	struct:SSLSession
readBE	utils/FileIO.c	/^int readBE(u1 *src, int *dst, int bytes)$/;"	f
readBuf	utils/FileIO.c	/^int readBuf(u1 *src, void *buf, int count)$/;"	f
readFD	utils/FileIO.c	/^int readFD(int fd, u1 *buf, int count, FILE *file)$/;"	f
readHttpHdr	http/myhttpd.c	/^int readHttpHdr(SSLSession *ssl)$/;"	f
record_table	http/clg.c	/^volatile void *record_table;$/;"	v
regs	crypto/md5/MD5.h	/^	u4 regs[4];$/;"	m	struct:MD5Ctx
report	http/clg.c	/^void report(int process_num)$/;"	f
reverseWord	utils/BitOp.c	/^u8 reverseWord(u8 in, int size)$/;"	f
rsaChar2Hex	crypto/RSA.c	/^static char rsaChar2Hex(char ch)$/;"	f	file:
rsaDecrypt	crypto/RSA.c	/^int rsaDecrypt(RSAParameters *rsa, u1 *cipher, u1 *plain)$/;"	f
rsaDecryptCb	crypto/RSA.c	/^void rsaDecryptCb()$/;"	f
rsaEncrypt	crypto/RSA.c	/^int rsaEncrypt(RSAParameters *rsa, u1 *cipher, u1 *plain)$/;"	f
rsaEncryptCb	crypto/RSA.c	/^void rsaEncryptCb()$/;"	f
rsaGetKeyLen	crypto/RSA.c	/^static int rsaGetKeyLen(u1 *mod, int modLen)$/;"	f	file:
rsaInit	crypto/RSA.c	/^RSAParameters *rsaInit(u1 *pvKey, int pvLen, $/;"	f
rsaRaw2Str	crypto/RSA.c	/^static u1 *rsaRaw2Str(u1 *rawIn, int length)$/;"	f	file:
rsaStr2Raw	crypto/RSA.c	/^static u1 *rsaStr2Raw(u1 *strIn, int length)$/;"	f	file:
rsaVerify	crypto/RSA.c	/^bool rsaVerify()$/;"	f
run	http/clg.c	/^static void run(int download, CmdTable *pCmdTable)$/;"	f	file:
run	http/myhttpd.c	/^void run(CmdTable *cmds)$/;"	f
runMD5Hash	crypto/md5/MD5.c	/^static int runMD5Hash(MD5Ctx *ctx)$/;"	f	file:
runPHash	ssl/SSLLib.c	/^static void runPHash(const EVP_MD *hash, u1 *secret, int secretLen,$/;"	f	file:
runPRF	ssl/SSLLib.c	/^static void runPRF(const EVP_MD *md5, const EVP_MD *sha1, $/;"	f	file:
s1	Common.h	/^typedef signed char				s1;$/;"	t
s2	Common.h	/^typedef signed short			s2;$/;"	t
s31ClnEnt	ssl/S31Cln.c	/^void s31ClnEnt(void *cmdTable)$/;"	f
s31ClnHSK	ssl/S31Cln.c	/^int s31ClnHSK()$/;"	f
s31ClnMeth	ssl/S31Cln.c	/^SSL_METH* s31ClnMeth()$/;"	f
s31ClnRecvFIN	ssl/S31Cln.c	/^static int s31ClnRecvFIN(int nextStep)$/;"	f	file:
s31ClnRecvSH	ssl/S31Cln.c	/^static int s31ClnRecvSH(int nextStep)$/;"	f	file:
s31ClnRecvSHD	ssl/S31Cln.c	/^static int s31ClnRecvSHD(int nextStep)$/;"	f	file:
s31ClnRecvSKE	ssl/S31Cln.c	/^static int s31ClnRecvSKE(int nextStep)$/;"	f	file:
s31ClnSendCH	ssl/S31Cln.c	/^static int s31ClnSendCH(int nextStep)$/;"	f	file:
s31ClnSendCKE	ssl/S31Cln.c	/^static int s31ClnSendCKE(int nextStep)$/;"	f	file:
s31ClnSendFIN	ssl/S31Cln.c	/^static int s31ClnSendFIN(int nextStep)$/;"	f	file:
s31ClnVerifyCert	ssl/S31Cln.c	/^static int s31ClnVerifyCert(int nextStep)$/;"	f	file:
s31SvrHSK	ssl/S31Svr.c	/^static int s31SvrHSK(SSLSession *ssl, bool isFirst)$/;"	f	file:
s31SvrMeth	ssl/S31Svr.c	/^SSL_METH* s31SvrMeth()$/;"	f
s31SvrRecvCH	ssl/S31Svr.c	/^static int s31SvrRecvCH(SSLSession *ssl, int nextStep)$/;"	f	file:
s31SvrRecvCKE	ssl/S31Svr.c	/^static int s31SvrRecvCKE(SSLSession *ssl, int nextStep)$/;"	f	file:
s31SvrRecvFIN	ssl/S31Svr.c	/^static int s31SvrRecvFIN(SSLSession *ssl, int nextStep)$/;"	f	file:
s31SvrSendCert	ssl/S31Svr.c	/^static int s31SvrSendCert(SSLSession *ssl, int nextStep)$/;"	f	file:
s31SvrSendFIN	ssl/S31Svr.c	/^static int s31SvrSendFIN(SSLSession *ssl, int nextStep)$/;"	f	file:
s31SvrSendHR	ssl/S31Svr.c	/^static int s31SvrSendHR(SSLSession *ssl, int nextStep)$/;"	f	file:
s31SvrSendSH	ssl/S31Svr.c	/^static int s31SvrSendSH(SSLSession *ssl, int nextStep)$/;"	f	file:
s31SvrSendSHD	ssl/S31Svr.c	/^static int s31SvrSendSHD(SSLSession *ssl, int nextStep)$/;"	f	file:
s31SvrSendSKE	ssl/S31Svr.c	/^static int s31SvrSendSKE(SSLSession *ssl, int nextStep)$/;"	f	file:
s31Version	ssl/S31Cln.c	/^static int s31Version()$/;"	f	file:
s31Version	ssl/S31Svr.c	/^static int s31Version()$/;"	f	file:
s4	Common.h	/^typedef signed int				s4;$/;"	t
s8	Common.h	/^typedef signed long long int	s8;$/;"	t
sID	ssl/SSLLib.h	/^	char *sID;$/;"	m	struct:SSLSession
sIDLen	ssl/SSLLib.h	/^	int sIDLen;$/;"	m	struct:SSLSession
send_error	http/myhttpd.c	/^void send_error(SSLSession *ssl, int cc)$/;"	f
seqLen	crypto/X509.h	/^	int seqLen;$/;"	m	struct:TBSCert
serialNum	crypto/X509.h	/^	ASN1Integer serialNum;$/;"	m	struct:TBSCert
serialNum	crypto/X509.h	/^	u1 *serialNum;$/;"	m	struct:IssuerInfo
serialNumLen	crypto/X509.h	/^	int serialNumLen;$/;"	m	struct:IssuerInfo
serve_client	http/myhttpd.c	/^int serve_client(SSLSession *ssl)$/;"	f
serverIV	ssl/SSLLib.h	/^	u1 *serverIV;$/;"	m	struct:KeyPairs
serverMAC	ssl/SSLLib.h	/^	u1 *serverMAC;$/;"	m	struct:KeyPairs
serverW	ssl/SSLLib.h	/^	u1 *serverW;$/;"	m	struct:KeyPairs
server_url	http/clg.c	/^char *server_url;$/;"	v
setStr2BNum	utils/BigNum.c	/^int setStr2BNum(BNum *pNum, char *str, int base)$/;"	f
sha1Fin	ssl/SSLLib.h	/^	EVP_MD_CTX *sha1Fin;$/;"	m	struct:SSLSession
sigAlgorithm	crypto/X509.h	/^	AlgorithmID *sigAlgorithm;$/;"	m	struct:CertX509
sigValue	crypto/X509.h	/^	ASN1BitString *sigValue;$/;"	m	struct:CertX509
sign	utils/BigNum.h	/^	char sign;$/;"	m	struct:BNum
signature	crypto/X509.h	/^	AlgorithmID *signature;$/;"	m	struct:TBSCert
sock_buf	http/clg.c	/^char sock_buf[4096];$/;"	v
sock_buf	http/myhttpd.c	/^char sock_buf[4096] = {0};$/;"	v
ssl	http/clg.c	/^SSLSession *ssl;$/;"	v
ssl	ssl/S31Cln.c	/^SSLSession *ssl;$/;"	v
sslCBCPadding	ssl/SSLLib.c	/^int sslCBCPadding(SSLSession *ssl, u1 *plainTail, int plainLen)$/;"	f
sslClean	ssl/SSLLib.c	/^void sslClean(SSLSession *ssl, int connfd, int which)$/;"	f
sslHttpClnEnt	http/clg.c	/^void sslHttpClnEnt(void *parm)$/;"	f
sslHttpSvrEnt	http/myhttpd.c	/^void sslHttpSvrEnt(void *parm)$/;"	f
sslInit	ssl/SSLLib.c	/^SSLSession* sslInit(int connfd, CmdTable *cmds, int which)$/;"	f
sslReadMTHdr	ssl/SSLLib.c	/^u1* sslReadMTHdr(SSLSession *ssl, int *msgLen, int sslMT, int sslVer)$/;"	f
sslRecvPacket	ssl/SSLLib.c	/^int sslRecvPacket(SSLSession *ssl, int sslRT, int sslVer, $/;"	f
sslSendPacket	ssl/SSLLib.c	/^int sslSendPacket(SSLSession *ssl, int sslRT, int sslVer, $/;"	f
sslSessionDec	ssl/SSLLib.c	/^int sslSessionDec(SSLSession *ssl, u1 *cipherText, int cipherLen, $/;"	f
sslSessionEnc	ssl/SSLLib.c	/^int sslSessionEnc(SSLSession *ssl, u1 *plainText, int plainLen,$/;"	f
sslStdIOApp	ssl/SSLSvr.c	/^void sslStdIOApp(SSLSession *ssl, int sslVer, int which,$/;"	f
sslSvrEnt	ssl/SSLSvr.c	/^void sslSvrEnt(void *cmdTable)$/;"	f
sslWriteMTHdr	ssl/SSLLib.c	/^int sslWriteMTHdr(SSLSession *ssl, int msgLen, int sslMT, int sslVer)$/;"	f
state	crypto/X509.h	/^	char *state;$/;"	m	struct:IssuerInfo
str2Raw	utils/StrLib.c	/^u1 *str2Raw(u1 *strIn, int length)$/;"	f
subject	crypto/X509.h	/^	IssuerInfo *subject;$/;"	m	struct:TBSCert
subjectUID	crypto/X509.h	/^	char *subjectUID;$/;"	m	struct:TBSCert
surName	crypto/X509.h	/^	char *surName;$/;"	m	struct:IssuerInfo
svrMeth	ssl/S31Svr.c	/^SSL_METH svrMeth = {$/;"	v
svrRandom	ssl/SSLLib.h	/^	u1 *svrRandom;$/;"	m	struct:SSLSession
svrSeq	ssl/SSLLib.h	/^	u8 svrSeq;$/;"	m	struct:SSLSession
table	crypto/ASN1Def.h	/^	ASN1String **table;$/;"	m	struct:ASN1StringTable
tableSize	crypto/ASN1Def.h	/^	int tableSize;$/;"	m	struct:ASN1StringTable
table_mutex	http/clg.c	/^pthread_mutex_t table_mutex;$/;"	v
tag	crypto/X509.c	/^	int tag;$/;"	m	struct:DERCstr	file:
tag	crypto/X509.c	/^	int tag;$/;"	m	struct:DERPri	file:
tbsCert	crypto/X509.h	/^	TBSCert *tbsCert;$/;"	m	struct:CertX509
timeout	http/myhttpd.c	/^unsigned timeout;$/;"	v
title	crypto/X509.h	/^	char *title;$/;"	m	struct:IssuerInfo
transmission_length	http/clg.c	/^unsigned long long transmission_length;$/;"	v
transmission_time	http/clg.c	/^unsigned long long transmission_time;$/;"	v
true	Common.h	/^	false = 0, true = !false$/;"	e	enum:__anon1
try_read	http/clg.c	/^static int try_read(char* read_buf)$/;"	f	file:
try_read	http/myhttpd.c	/^int try_read(int fd, char* read_buf, int read_len)$/;"	f
try_ssl_write	http/myhttpd.c	/^int try_ssl_write(SSLSession *ssl, char *write_buf, int write_len)$/;"	f
try_write	http/clg.c	/^static int try_write(char *write_buf, int write_len)$/;"	f	file:
try_write	http/myhttpd.c	/^int try_write(int fd, char *write_buf, int write_len)$/;"	f
type	crypto/ASN1Def.h	/^	int type;$/;"	m	struct:ASN1String
u1	Common.h	/^typedef unsigned char			u1;$/;"	t
u2	Common.h	/^typedef unsigned short			u2;$/;"	t
u4	Common.h	/^typedef unsigned int			u4;$/;"	t
u8	Common.h	/^typedef unsigned long long int	u8;$/;"	t
updateMD5	crypto/md5/MD5.c	/^int updateMD5(MD5Ctx *ctx, const char *src, int len)$/;"	f
version	crypto/X509.h	/^	ASN1Integer version;$/;"	m	struct:TBSCert
version	http/clg.c	/^int version;$/;"	v
version	http/myhttpd.c	/^unsigned version;$/;"	v
version	ssl/SSLLib.h	/^	int (*version)(void);$/;"	m	struct:SSL_METH
writeArrBE	utils/FileIO.c	/^int writeArrBE(u1 *dst, u1 *arr, int size, int count)$/;"	f
writeBE	utils/FileIO.c	/^int writeBE(u1 *dst, u8 src, int bytes)$/;"	f
writeBuf	utils/FileIO.c	/^int writeBuf(u1 *dst, void *buf, int count)$/;"	f
writeFD	utils/FileIO.c	/^int writeFD(int fd, u1 *buf, int count, FILE *file)$/;"	f
writeFile	utils/FileIO.c	/^static void writeFile(u1 *buf, int counts, FILE *file)$/;"	f	file:
